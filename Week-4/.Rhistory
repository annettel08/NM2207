gapminder_df <- read.csv(file.choose())
gapminder_1997df <- gapminder_df[gapminder_df$year == 1997,]
cor.test(gapminder_1997df$lifeExp, gapminder_1997df$gdpPercap)
cor.test(gapminder_1997df$lifeExp, gapminder_1997df$gdpPercap)
( p very small ) correlation
# high (0.706), and significant (p very small ) correlation
# gdp per capita and population
cor.test(gapminder_1997df$pop, gapminder_1997df$gdpPercap)
gapminder_1982df <- gapminder_df[gapminder_df$year == 1982,]
mean(gapminder_1982df$lifeExp)
t.test(gapminder_1982df$continent == "Africa",]$lifeExp mu = 61.5332,)
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp mu = 61.5332,)
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp mu = 61.5332, → alternative = "less")
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp mu= 61.5332, → alternative = "less")
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp, mu = 61.5332,
,→ alternative = "less")
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp, mu = 61.5332,
→ alternative = "less")
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp, mu = 61.5332,
,→ alternative = "less")
gapminder_1982df <- gapminder_df[gapminder_df$year == 1982,]
mean(gapminder_1982df$lifeExp)
# one sample, one sided t-test
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp, mu = 61.5332,
,→ alternative = "less")
# one sample, one sided t-test
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp, mu = 61.5332,
,→ alternative = "less")
gapminder_1982df <- gapminder_df[gapminder_df$year == 1982,]
mean(gapminder_1982df$lifeExp)
# one sample, one sided t-test
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp, mu = 61.5332,
,→ alternative = "less")
#two sample, two sided t-test
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp,
,→ gapminder_1982df[gapminder_1982df$continent == "Asia",]$lifeExp)
gapminder_1982df <- gapminder_df[gapminder_df$year == 1982,]
# one sample, one sided t-test
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp, mu = 61.5332,
,→ alternative = "less")
library(MASS)
head(survey)
tbl <- table(survey$Exer,survey$Smoke)
chisq.test(tbl)
tbl <- table(survey$Exer, survey$Smoke)
chisq.test(tbl)
tbl <- table(survey$Sex, survey$Smoke)
chisq.test(tbl)
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp, mu = 61.5332,
,→ alternative = "less")
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp, mu = 61.5332, → alternative = "less")
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp, mu = 61.5332, →alternative = "less")
sunburn_df <- read.csv(file.choose())
cor.test(gaminder_1997df$lifeExp, gapminder_1997df$gdpPercap)
cor.test(gapminder_1997df$lifeExp, gapminder_1997df$gdpPercap)
gapminder_2007df <- gapminder_df[gapminder_df$year == 2007,]
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp, gapminder_2007df[gapminder_2007df$continent == "Africa",]$lifeExp, paired = TRUE)
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp, gapminder_2007df[gapminder_2007df$continent == "Africa",]$lifeExp, paired = TRUE, alternative = "less")
sunburn_df <- read.csv(file.choose())
gapminder_df <- red.csv(file.choose())
gapminder_df <- read.csv(file.choose())
gapminder_df <- read.csv(file.choose())
gapminder_1997df <- gapminder_df[gapminder_df$year == 1997,]
cor.test(gapminder_1997df$lifeExp, gapminder_1997df$gdpPercap)
cor.test(gapminder_1997df$pop, gapminder_1997df$gdpPercap)
gapminder_1982df <- gapminder_df[gapminder_df$year == 1982,]
mean(gapminder_1982dfd$lifeExp)
gapminder_1997df <- gapminder_df[gapminder_df$year == 1997,]
cor.test(gapminder_1997df$lifeExp, gapminder_1997df$gdpPercap)
cor.test(gapminder_1997df$pop, gapminder_1997df$gdpPercap)
gapminder_1982df <- gapminder_df[gapminder_df$year == 1982,]
mean(gapminder_1982df$lifeExp)
t.test(gapminder1982df[gapminder_1982df$continent == "Africa",]$lifeExp, mu = 61.5332, alternative = "less")
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp, mu = 61.5332, alternative = "less")
cor.test(gapminder_1997df$lifeExp, gapminder_1997df$gdpPercap)
cor.test(gapminder_1997df$pop, gapminder_1997df$gdpPercap)
gapminder_1982df <- gapminder_df[gapminder_df$year == 1982,]
mean(gapminder_1982df$lifeExp)
t.test(gapminder_1982df[gapminder_1982df$continent == "Africa",]$lifeExp, gapminder_1982df[gapminder_1982df$continent == "Asia",]$lifeExp)
x <- c(25,30,22,28,33)
print(typeof(x))
ages <- x
ages
print(x)
student_info <- list("Alice", "Bob", "Catherine",85, 92, 78, TRUE, TRUE, FLASE)
student_info <- list("Alice", "Bob", "Catherine",85, 92, 78, TRUE, TRUE, FALSE)
student_info
data <- x(10, 15.5, "20", TRUE)
data <- C(10, 15.5, "20", TRUE)
data <- c(10, 15.5, "20", TRUE)
print(typeof(data))
data <- c(10, 15.5, "20", TRUE)
typeof(data[1])
typeof(data[2])
typeof(data[3])
typeof(data[4])
prices <- c(20.5, 15, "25")
typeof(prices)
prices <- as.numeric(prices)
typeof(prices)
x <- c(5, 10,15)
typeof(x)
y <- c("apple", "banana", "cherry")
typeof(y)
combined_vector <- c(5, 10, 15, "apple", "banana", "cherry")
typeof(combined_vector)
numbers <- c(7, 12.5, "15.7")
sum_result <- sum(numbers)
numbers <- as.numeric(numbers)
sum_result <- sum(numbers)
grades <- c(85, 90.5, "75.2")
mean(grades)
grades <- as.numeric(grades)
mean(grades)
mixed_data <- list()
mixed_data <- list()
mixed_data <- list( numeric_vector <- c(10,20,30), character_vector <- c("red","green","blue"), logical_vector <- c(TRUE, FALSE, TRUE))
mean(mixed_data$numeric_vector)
typeof(numeric_vector)
mean(numeric_vector)
umeric_vector <- as.numeric(mixed_data$numeric_vector)
mean_numeric <- mean(numeric_vector, na.rm = TRUE)
mixed_data$numeric_vector
mixed_data$ numeric_vector
student_info <- list("Alice", "Bob", "Catherine",85, 92, 78, TRUE, TRUE, FALSE)
glipse(student_info)
glimpse(student_info)
library(tidyverse)
glimpse(student_info)
str(student_info)
student_info <- as.vector(student_info)
student_info[5]
student_info <- list(Alice <- list(name="Alice", score=85, passed=TRUE), Bob <- list(name= "Bob", score= 92, passed= TRUE), Catherine <- list(name="Catherine", score= 78, passed=FALSE))
student_info$Bob$score
student_info$Bob
names(student_info)
student_info["name"]
bob_score <- student_info$Bob$score
print(bob_score)
student_info <- list(
Alice = list(name = "Alice", score = 85, has_passed = TRUE),
Bob = list(name = "Bob", score = 92, has_passed = TRUE),
Catherine = list(name = "Catherine", score = 78, has_passed = FALSE)
)
bob_score <- student_info$Bob$score
print(bob_score)
student_info <- list(Alice = list(name="Alice", score=85, passed=TRUE), Bob = list(name= "Bob", score= 92, passed= TRUE), Catherine = list(name="Catherine", score= 78, passed=FALSE))
student_info["name"]
student_info[name]
student_into$name
student_info$name
student_info$Bob$score
print(student_info$Bob$score)
x <- double(23)
last_element <- x[length(x)]
print(last_element)
words <- c("apple", "banana", "cherry", "apple")
indices <- which(words == "apple")
print(indices)
ages <- c(32,12,43,9,44,30,18)
above_thirty <- ages[ages>30]
print(above_thirty)
sequence <- 1:20
every_third_element <- sequence[from=1, to=20, by=3]
every_third_element <- sequence[seq(from=1, to=20, by=3)]
print(every_third_element)
sequence <- 4:20
every_third_element <- sequence[seq(from=1, to=20, by=3)]
print(every_third_element)
numbers <- 1:10
print(numbers[4:8])
data <- c(10, NA, 15, 20)
print(is.na(data[2]))
print(is.na[data[2]])
daily_temperatures <- c(93,87,86,90,85,99,95,89,90)
hot_days <- daily_temperatures[daily_temperatures>90]
print(hot_days)
?count
print(sum(hot_days))
number_of_hot_days <- length(hot_days)
print(number_of_hot_days)
fruits <- c("apple", "banana", "pineapple", "strawberry", "raspberry" "grape", "blueberry")
fruits <- c("apple", "banana", "pineapple", "strawberry", "raspberry", "grape", "blueberry")
nchar(fruits[fruits >6])
nchar(fruits > 6)
long_fruits <- fruits[nchar(fruits) > 6]
print(long_fruits)
long_names <- fruits[nchar(fruits) > 6]
print(long_names)
numbers <- c(12,10,24,25,36,30,75)
divisible_by_5 <- numbers %% 5 == 0
print(divisible_by_5)
print(numbers[divisible_by_5])
vector1 <- c(140, 34, 25, 15, 30, 12)
vector2 <- c(5, 34, 20, 10, 25, 8)
comparison <- vector1 > vector2
print(comparison)
comparison <- c(vector1 > vector2)
print(comparison)
student_info <- list(names = c("Alice", "Bob", "Catherine"), scores = c(85, 92, 78), passed = c(TRUE, TRUE, FALSE))
print(student_info)
bob_score <- student_info$scores[student_info$names == "Bob"]
print(bob_score)
numbers <- c(7, 12.5, "15.7")
numbers <- as.numeric(numbers)
sum_result <- sum(numbers)
sum_result
prices <- c(20.5, 15, "25")
prices <- as.numeric(prices)
print(prices)
setwd("~/Documents/NM2207/Week-4")
library(tidyverse)
read_csv(hotels.csv)
hotels <- read_csv("hotels.csv")
hotels$hotel
names(hotel)
names(hotels)
glimpse(hotels)
select(hotels,lead_time)
select(hotels,lead_time, agent. market_segment)
select(hotels,lead_time, agent, market_segment)
arrange(hotels,lead_time)
arrange(hotels, desc(lead_time))
arrange( select(hotels, lead_time), desc(lead_time))
hotels %<%
cv
hotels %<%
select(lead_time)
hotels %>%
+ select(lead_time)
hotels %>%select(lead_time)
hotels %>%select(lead_time)
hotels %>%select(lead_time)
hotels %>%
select(lead_time) %>%
arrange(desc(lead_time))
hotels %>%
select(lead_time) %>%
arrange(desc(lead_time))
hotels %>%
filter(
children >=1
0 %>%
hotels %>%
filter(children >=1) %>%
dv
hotels %>%
filter(children >=1) %>%
select(hotel,children)
hotels %>%
+     filter(
children >=1,
hotel == "City Hotel") %>%
+     select(hotel,children)
hotels %>%
filter(children >=1, hotel == "City Hotel") %>%
select(hotel,children)
hotels %>% slice(1:5)
hotels %>% slice(1,3,5)
hotels %>% distinct(hotel)
hotels %>%
mutate(little_ones = children + babies) %>%
select(hotel, little_ones, children, babies)
hotels %>%
+     mutate(little_ones = children + babies, average_little_ones = mean(little_ones)) %>%
+     select(hotel, little_ones, children, babies, average_little_ones)
hotels %>%
mutate(little_ones = children + babies, average_little_ones = mean(little_ones)) %>%
select(hotel, little_ones, children, babies, average_little_ones)
is.na(little_ones)
hotels %>% count(market_segment)
hotels %>% count(market_segment, sort = TRUE)
hotels %>% count(hotel, market_segment)
hotels %>% summarise (mean_adr = mean(adr))
hotels %>%
group_by(hotel) %>%
summarise(mean_adr= mean(adr))
hotels %>%
group_by(hotel) %>%
summarise(count = n())
hotels %>%
summarise(
min_adr = min(adr),
mean_adr = mean(adr),
)
hotels %>%
summarise(
min_adr = min(adr),
mean_adr = mean(adr),
median_adr = median(adr),
hotels %>%
summarise(
min_adr = min(adr),
mean_adr = mean(adr),
median_adr = median(adr),
max_adr = max(adr))
library(tidyverse)
library(tidyverse)
hotels <- read_csv("Hotels.csv")
hotels %>%
summarise(
min_adr = min(adr),
mean_adr = mean(adr),
median_adr = median(adr),
)
hotels %>%
summarise(
min_adr = min(adr),
mean_adr = mean(adr),
median_adr = median(adr),
max_adr = max(adr)
)
hotels %>%
select(hotel, lead_time) %>%
slice(1:5) %>%
arrange(lead_time)
hotels %>%
select(hotel, lead_time) %>%
arrange(lead_time) %>%
slice(1:5)
hotels %>%
filter(hotel == "City Hotels")
hotels %>%
filter(
adults == 0,
children >= 1
) %>%
select(adults, babies, children)
)
hotels %>%
filter(adults == 1,
children >= 1 | babies >= 1) %>%
select(adults, babies, children)
hotels %>%
count(market_segment) %>%
arrange(desc(n))
hotels %>%
mutate(little_ones = children + babies) %>%
select(children, babies, little_ones) %>%
arrange(desc(little_ones))
hotels %>%
mutate(little_ones = children + babies) %>%
filter(
little_ones >= 1,
hotel == "Resort Hotel"
) %>%
select(hotel, little_ones)
library(tidyverse)
read_csv("CommQuest2023_Larger.csv")
comm_data <- read_csv("CommQuest2023_Larger.csv")
select(date, channel, message)
select(comm_data, date, channel, message)
comm_data %>%
filter(channel == "Twitter", date == "2023-08-02")
comm_data %>%
filter(channel == "Twitter", date == as.Date("2023-08-02"))
comm_data %>%
select(date) %>%
arrange(date)
comm_data %>%
arrange(date)
comm_data %>% distinct(senders)
comm_data %>% distinct(sender)
comm_data %>%
group_by(sender) %>%
count(messages)
comm_data %>%
+     group_by(sender) %>%
+     count(message)
comm_data %>%
group_by(sender) %>%
count(message)
comm_data %>%
group_by(sender) %>%
count()
comm_data %>%
group_by(sender) %>%
summarize(total_messages = n())
comm_data %>%
group_by(channel) %>%
count()
comm_data %>%
filter(mean_sentiment=mean(sentiment)) %>%
select(sender, sentiment) %>%
arrange(desc(mean_sentiment))
comm_data %>% summarise(mean_score=mean(sentiment))
comm_data %>%
group_by(sender) %>%
summarise(mean_score=mean(sentiment)) %>%
arrange(mean_score)
comm_data %>%
group_by(sender) %>%
summarise(mean_score=mean(sentiment)) %>%
arrange(desc(mean_score))
comm_data %>%
group_by(sender) %>%
summarise(mean_score=mean(sentiment)) %>%
ew
comm_data %>%
group_by(sender) %>%
summarise(mean_score=mean(sentiment)) %>%
f
comm_data %>%
group_by(sender) %>%
summarise(mean_score=mean(sentiment)) %>%
d
comm_data %>%
group_by(sender) %>%
summarise(mean_score=mean(sentiment))
comm_data %>%
filter(row_number() <= 3) %>%
select(sender, mean_score) %>%
arrange(mean_score)
comm_data %>%
group_by(sender) %>%
summarise(mean_score=Mean(sentiment)) %>%
filter(row_number() >= 3) %>%
select(sender, mean_score) %>%
arrange(mean_score)
comm_data %>%
group_by(sender) %>%
summarise(mean_score= mean(sentiment)) %>%
filter(row_number() >= 3) %>%
select(sender, mean_score) %>%
arrange(mean_score)
comm_data %>%
+      group_by(sender) %>%
+      summarise(mean_score= mean(sentiment)) %>%
+      filter(row_number() <= 3) %>%
+      select(sender, mean_score) %>%
+      arrange(mean_score)
comm_data %>%
group_by(sender) %>%
summarise(mean_score= mean(sentiment)) %>%
filter(row_number() <= 3) %>%
select(sender, mean_score) %>%
arrange(mean_score)
comm_data %>%
group_by(sender) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
filter(mean_sentiment > 0) %>%
arrange(desc(mean_sentiment)) %>%
head(3) %>%
select(sender, mean_sentiment)
comm_data %>%
group_by(sender) %>%
summarise(mean_sentiment = mean(sentiment)) %>%
arrange(desc(mean_sentiment)) %>%
filter(mean_sentiment > 0, row_number() <= 3) %>%
select(sender, mean_sentiment)
comm_data %>%
group_by(date) %>%
summarise(mean_score= mean(sentiment)) %>%
arrange(mean_score)
comm_data %>%
group_by(date) %>%
summarise(mean_score= mean(sentiment)) %>%
arrange(date)
comm_data %>%
filter(sentiment <0 ) %>%
select(messages, sentiment)
comm_data %>%
filter(sentiment <0 ) %>%
select(message, sentiment)
negative_sentiment_message <- comm_data %>%
filter(sentiment < 0) %>%
select(date, channel, sender, message, sentiment)
negative_sentiment_message <- comm_data %>%
filter(sentiment < 0) %>%
select(date, channel, sender, message, sentiment)
negative_sentiment <- comm_data %>%
filter(sentiment <0 ) %>%
select(message, sender, channel, date, sentiment)
re
date_channel_message <-select(comm_data, date, channel, message)
comm_data %>%
mutate("Positive" = sentiment >0, "Neutral" = sentiment=0, "Negative" = sentiment <0)
comm_data %>%
mutate("Positive" = sentiment >0, "Neutral" = sentiment ==0, "Negative" = sentiment <0)
comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 => "Positive",
comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 = "Positive",
comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 ~ "Positive",
sentiment == 0 ~ "Neutral",
sentiment < 0 ~ "Negative"
))
comm_data %>%
mutate(sentiment_label = case_when(
sentiment > 0 ~ "Positive",
sentiment == 0 ~ "Neutral",
sentiment < 0 ~ "Negative"))
comm_data %>%
mutate(product_score = sentiment * nchar(message)) %>%
arrange(desc(product_score))
sentiment_and_message_length <- comm_data %>%
mutate(product_score = sentiment * nchar(message)) %>%
arrange(desc(product_score))
comm_data %>%
group_by(date) %>%
summarise( total_characters = nchar(message)) %>%
arrange(head(1))
comm_data %>%
group_by(date) %>%
summarise(total_characters = sum(nchar(message))) %>%
arrange(desc(total_characters)) %>%
head(1)
comm_data <- read_csv("CommQuest2023_Larger.csv")
