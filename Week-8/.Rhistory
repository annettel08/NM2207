setwd("~/Dropbox/Mac/Documents/NM2207/Week-8")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages("shiny")
library(shiny)
?runxample()
?runExample()
runExample("01_hello")
library(shiny)
ui <- fluidPage(
titlePanel("Hello Shiny!"),
sidebarLayout(
sidebarPanel(
# Input: Slider for the number of bins ----
sliderInput(inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30)),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
plotOutput(outputId = "distPlot"))))
runExample("01_hello")
hist(x, breaks = bins, col = "#75AADB", border = "yellow",
xlab = "Waiting time to next eruption (in mins)",
main = "Histogram of waiting times")
library(shiny)
runApp("App-1")
runApp("App-1", display.mode = "showcase")
runApp('App-1')
runExample()
runExample(07_widgets)
runExample("07_widgets")
runExample("03_reactivity")
runExample("10_download")
runApp("04_mpg")
runExample("04_mpg")
runApp('App-1')
install.packages("ggplot2")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
shiny::runApp('App-1')
runExample()
runExample("02_text")
runExample("02_text")
runApp('App-1')
runApp('App-1')
runApp('App-1')
runApp('App-1')
runApp('App-1')
runApp('App-1')
runApp('App-1')
runApp('App-1')
runApp('App-1')
runApp('App-1')
runApp('App-1')
runApp('App-1')
runApp('App-1')
knitr::opts_chunk$set(echo = TRUE)
# Create Shiny app ----
shinyApp(ui = ui, server = server)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("shiny")
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
body {
background-color: maroon;
color: white; /* Set text color to white */
}
"))
),
# App title ----
titlePanel("Annette's Week 8 Challenge"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Selector for choosing dataset ----
selectInput(inputId = "dataset",
label = "Choose a dataset:",
choices = c("rock", "pressure", "cars")),
# Input: Numeric entry for number of obs to view ----
numericInput(inputId = "obs",
label = "Number of observations to view:",
value = 15)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Verbatim text for data summary ----
verbatimTextOutput("summary"),
# Output: HTML table with requested number of observations ----
tableOutput("view"),
# Container for the image ----
div(
img(src = "rock_image.jpeg", height = 140, width = 300),
img(src = "car_image.png", height = 140, width = 200)
)
)
)
)
# Define server logic to summarize and view selected dataset ----
server <- function(input, output) {
# Return the requested dataset ----
datasetInput <- reactive({
switch(input$dataset,
"rock" = rock,
"pressure" = pressure,
"cars" = cars)
})
# Generate a summary of the dataset ----
output$summary <- renderPrint({
dataset <- datasetInput()
summary(dataset)
})
# Show the first "n" observations ----
output$view <- renderTable({
head(datasetInput(), n = input$obs)
})
}
# Create Shiny app ----
shinyApp(ui = ui, server = server)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("shiny")
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
body {
background-color: maroon;
color: white; /* Set text color to white */
}
"))
),
# App title ----
titlePanel("Annette's Week 8 Challenge"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Selector for choosing dataset ----
selectInput(inputId = "dataset",
label = "Choose a dataset:",
choices = c("rock", "pressure", "cars")),
# Input: Numeric entry for number of obs to view ----
numericInput(inputId = "obs",
label = "Number of observations to view:",
value = 15)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Verbatim text for data summary ----
verbatimTextOutput("summary"),
# Output: HTML table with requested number of observations ----
tableOutput("view"),
# Container for the image ----
div(
img(src = "rock_image.jpeg", height = 140, width = 300),
img(src = "car_image.png", height = 140, width = 200)
)
)
)
)
# Define server logic to summarize and view selected dataset ----
server <- function(input, output) {
# Return the requested dataset ----
datasetInput <- reactive({
switch(input$dataset,
"rock" = rock,
"pressure" = pressure,
"cars" = cars)
})
# Generate a summary of the dataset ----
output$summary <- renderPrint({
dataset <- datasetInput()
summary(dataset)
})
# Show the first "n" observations ----
output$view <- renderTable({
head(datasetInput(), n = input$obs)
})
rmarkdown::render(tempReport, output_file = file,
params = params,
envir = new.env(parent = globalenv())
)
}
# Create Shiny app ----
shinyApp(ui = ui, server = server)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("shiny")
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
body {
background-color: maroon;
color: white; /* Set text color to white */
}
"))
),
# App title ----
titlePanel("Annette's Week 8 Challenge"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Selector for choosing dataset ----
selectInput(inputId = "dataset",
label = "Choose a dataset:",
choices = c("rock", "pressure", "cars")),
# Input: Numeric entry for number of obs to view ----
numericInput(inputId = "obs",
label = "Number of observations to view:",
value = 15)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Verbatim text for data summary ----
verbatimTextOutput("summary"),
# Output: HTML table with requested number of observations ----
tableOutput("view"),
# Container for the image ----
div(
img(src = "rock_image.jpeg", height = 140, width = 300),
img(src = "car_image.png", height = 140, width = 200)
)
)
)
)
# Define server logic to summarize and view selected dataset ----
server <- function(input, output) {
# Return the requested dataset ----
datasetInput <- reactive({
switch(input$dataset,
"rock" = rock,
"pressure" = pressure,
"cars" = cars)
})
# Generate a summary of the dataset ----
output$summary <- renderPrint({
dataset <- datasetInput()
summary(dataset)
})
# Show the first "n" observations ----
output$view <- renderTable({
head(datasetInput(), n = input$obs)
})
rmarkdown::render(tempReport, output_file = file,
params = params,
envir = new.env(parent = globalenv())
)
}
# Create Shiny app ----
shinyApp(ui = ui, server = server)
runApp('App-1')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("shiny")
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
body {
background-color: maroon;
color: white; /* Set text color to white */
}
"))
),
# App title ----
titlePanel("Annette's Week 8 Challenge"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Selector for choosing dataset ----
selectInput(inputId = "dataset",
label = "Choose a dataset:",
choices = c("rock", "pressure", "cars")),
# Input: Numeric entry for number of obs to view ----
numericInput(inputId = "obs",
label = "Number of observations to view:",
value = 15)
),
# Main panel for displaying outputs ----
mainPanel(
div(
img(src = "rock_image.jpeg", height = 140, width = 300),
img(src = "car_image.png", height = 140, width = 200)
)
# Output: Verbatim text for data summary ----
verbatimTextOutput("summary"),
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("shiny")
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
body {
background-color: maroon;
color: white; /* Set text color to white */
}
"))
),
# App title ----
titlePanel("Annette's Week 8 Challenge"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Selector for choosing dataset ----
selectInput(inputId = "dataset",
label = "Choose a dataset:",
choices = c("rock", "pressure", "cars")),
# Input: Numeric entry for number of obs to view ----
numericInput(inputId = "obs",
label = "Number of observations to view:",
value = 15)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Verbatim text for data summary ----
verbatimTextOutput("summary"),
# Output: HTML table with requested number of observations ----
tableOutput("view"),
# Container for the image ----
div(
img(src = "rock_image.jpeg", height = 140, width = 300),
img(src = "car_image.png", height = 140, width = 200)
)
)
)
)
# Define server logic to summarize and view selected dataset ----
server <- function(input, output) {
# Return the requested dataset ----
datasetInput <- reactive({
switch(input$dataset,
"rock" = rock,
"pressure" = pressure,
"cars" = cars)
})
# Generate a summary of the dataset ----
output$summary <- renderPrint({
dataset <- datasetInput()
summary(dataset)
})
# Show the first "n" observations ----
output$view <- renderTable({
head(datasetInput(), n = input$obs)
})
}
# Create Shiny app ----
shinyApp(ui = ui, server = server)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("shiny")
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
body {
background-color: maroon;
color: white; /* Set text color to white */
}
"))
),
# App title ----
titlePanel("Annette's Week 8 Challenge"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Selector for choosing dataset ----
selectInput(inputId = "dataset",
label = "Choose a dataset:",
choices = c("rock", "pressure", "cars")),
# Input: Numeric entry for number of obs to view ----
numericInput(inputId = "obs",
label = "Number of observations to view:",
value = 15)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Verbatim text for data summary ----
verbatimTextOutput("summary"),
# Output: HTML table with requested number of observations ----
tableOutput("view"),
# Container for the image ----
div(
img(src = "rock_image.jpeg", height = 140, width = 300),
img(src = "car_image.png", height = 140, width = 200)
)
)
)
)
# Define server logic to summarize and view selected dataset ----
server <- function(input, output) {
# Return the requested dataset ----
datasetInput <- reactive({
switch(input$dataset,
"rock" = rock,
"pressure" = pressure,
"cars" = cars)
})
# Generate a summary of the dataset ----
output$summary <- renderPrint({
dataset <- datasetInput()
summary(dataset)
})
# Show the first "n" observations ----
output$view <- renderTable({
head(datasetInput(), n = input$obs)
})
}
# Create Shiny app ----
shinyApp(ui = ui, server = server)
unlink("w8_cache", recursive = TRUE)
runApp('App-1')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("shiny")
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
body {
background-color: maroon;
color: white; /* Set text color to white */
}
"))
),
# App title ----
titlePanel("Annette's Week 8 Challenge"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Selector for choosing dataset ----
selectInput(inputId = "dataset",
label = "Choose a dataset:",
choices = c("rock", "pressure", "cars")),
# Input: Numeric entry for number of obs to view ----
numericInput(inputId = "obs",
label = "Number of observations to view:",
value = 15)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Verbatim text for data summary ----
verbatimTextOutput("summary"),
# Output: HTML table with requested number of observations ----
tableOutput("view"),
# Container for the image ----
div(
img(src = "rock_image.jpeg", height = 140, width = 300),
img(src = "car_image.png", height = 140, width = 200)
)
)
)
)
# Define server logic to summarize and view selected dataset ----
server <- function(input, output) {
# Return the requested dataset ----
datasetInput <- reactive({
switch(input$dataset,
"rock" = rock,
"pressure" = pressure,
"cars" = cars)
})
# Generate a summary of the dataset ----
output$summary <- renderPrint({
dataset <- datasetInput()
summary(dataset)
})
# Show the first "n" observations ----
output$view <- renderTable({
head(datasetInput(), n = input$obs)
})
}
# Create Shiny app ----
shinyApp(ui = ui, server = server)
